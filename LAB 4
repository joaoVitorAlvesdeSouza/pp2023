//1

/*
Crie uma função que recebe como parâmetro um número inteiro e devolve o seu dobro.
*/

#include <stdio.h>

int dobro(int num);

void main()
{
    int numero = 0;

    printf("Digite um número: ");
    scanf("%d", &numero);

    printf("O dobro de %d eh %d\n", numero, dobro(numero));
}

int dobro(int num) {
    return num * 2;
}

----------------------------------------------------------------------------------------------

//2

/*
Faça uma função que receba a data atual (dia, mês e ano em inteiro) e exiba-a na tela no
formato textual por extenso. Ex.: Data: 18/11/2022, Imprimir: 18 de novembro de 2022.
*/

#include <stdio.h>

void formatDate(int dia, int mes, int ano);

void main()
{
    int dia;
    int mes;
    int ano;

    scanf("%d/%d/%d", &dia, &mes, &ano);
    formatDate(dia, mes, ano);
}

void formatDate(int dia, int mes, int ano)
{
    char* months[] = {"janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"};

    printf("%d de %s de %d\n", dia, mes[mes - 1], ano);
}

----------------------------------------------------------------------------------------------

//3

/*
Faça uma função para verificar se um número é positivo ou negativo. Sendo que o valor de 
retorno será 1 se positivo, -1 se negativo e 0 se for igual a 0.
*/

#include <stdio.h>

int checkNumber(int number);

void main()
{
    int number = 0;

    scanf("%d", &number);
    printf("%d\n", checkNumber(number));
}

int checkNumber(int number)
{
    if (number > 0)
        return 1;
    else if (number < 0)
        return -1;
    else

 return 0;
}

---------------------------------------------------------------------------------------------

//4

/*
Faça  uma  função  para  verificar  se  um  número  é  um  quadrado  perfeito.  Um  quadrado 
perfeito  é  um  número  inteiro  não  negativo  que  pode  ser  expresso  como  o  quadrado  de 
outro número inteiro. Ex.: 1, 4, 9...
*/

#include <stdio.h>

int checkPerfectSquare(int number);

void main()
{
    int number = 0;

    scanf("%d", &number);
    
    if (checkPerfectSquare(number)) printf("É um quadrado perfeito\n");
    else printf("Não é um quadrado perfeito\n");
}

int checkPerfectSquare(int number)
{
    int i = 1;

    while (i * i < number)
        i++;

    if (i * i == number)
        return 1;
    else

 return 0;
}

---------------------------------------------------------------------------------------------

//5

/*
Faça uma função e um programa de teste para o cálculo do volume de uma esfera. Sendo 
que o raio é passado por parâmetro.
*/

#include <stdio.h>

float sphereVolume(float radius);

void main()
{
    float radius;

    scanf("%f", &radius);
    printf("%.2f\n", sphereVolume(radius));
}

float sphereVolume(float radius)
{
    return (4.0 / 3.0) * 3.14159 * radius * radius * radius;
}

---------------------------------------------------------------------------------------------

//6

/*
Faça  uma  função  que  receba  3  números  inteiros  como  parâmetro,  representando  horas, 
minutos e segundos, e os converta em segundos.
*/

#include <stdio.h>

int convertToSeconds(int hours, int minutes, int seconds);

void main()
{
    int hours, minutes, seconds;

    scanf("%d:%d:%d", &hours, &minutes, &seconds);
    printf("%d\n", convertToSeconds(hours, minutes, seconds));
}

int convertToSeconds(int hours, int minutes, int seconds)
{
    return hours * 3600 + minutes * 60 + seconds;
}

---------------------------------------------------------------------------------------------

//7

/*
Faça uma função que receba uma temperatura em graus Celsius e retorne-a convertida em 
graus Fahrenheit. A fórmula de conversão é: 𝐹 =𝐶∗(9,0
5,0)+32,0, sendo F a temperatura 
em Fahrenheit e C a temperatura em Celsius. 
*/

#include <stdio.h>

float convertToFahrenheit(float celsius);

void main()
{
    float celsius;

    scanf("%f", &celsius);
    printf("%.2f\n", convertToFahrenheit(celsius));
}

float convertToFahrenheit(float celsius)
{
    return celsius * (9.0 / 5.0) + 32.0;
}

----------------------------------------------------------------------------------------------

//8

/*
Sejam  a  e  b  os  catetos  de  um  triangulo,  onde  a  hipotenusa  é  obtida  pela  equação: 
hipotenusa=√𝑎2 + 𝑏2. Faça uma função que receba os valores de a e b e calcule o valor 
da hipotenusa através da equação. 
*/

#include <stdio.h>
#include <math.h>

float calculateHypotenuse(float a, float b);

void main()
{
    float a, b;

    scanf("%f %f", &a, &b);
    printf("%.2f\n", calculateHypotenuse(a, b));
}

float calculateHypotenuse(float a, float b)
{
    return sqrt(a * a + b * b);
}

---------------------------------------------------------------------------------------------

//9

/*
Faça uma função que receba a altura e o raio de um cilindro circular e retorne o volume do 
cilindro.  O  volume  de  um cilindro  circular  é  calculado  por meio  da  seguinte  fórmula: 𝑉 =
  ∗𝑟𝑎𝑖𝑜2 ∗𝑎𝑙𝑡𝑢𝑟𝑎, onde  = 3.141592.
*/

#include <stdio.h>

float cylinderVolume(float radius, float height);

void main()
{
    float radius, height;

    scanf("%f %f", &radius, &height);
    printf("%.2f\n", cylinderVolume(radius, height));
}

float cylinderVolume(float radius, float height)
{
    return 3.141592 * radius * radius * height;
}

--------------------------------------------------------------------------------------------

//10

/*
Faça uma função que receba dois números e retorne qual deles é o maior.
*/

#include <stdio.h>

int max(int a, int b);

void main()
{
    int a, b;

    scanf("%d %d", &a, &b);
    printf("%d\n", max(a, b));
}

int max(int a, int b)
{
    if (a > b)
        return a;
    else
        return b;
}

------------------------------------------------------------------------------------------------

//11

/*
Elabore uma função que receba três notas de um aluno como parâmetros e uma letra. Se a 
letra for A, a função deverá calcular a média aritmética das notas do aluno; se for P, deverá 
calcular a média ponderada, com pesos 5, 3 e 2. 
*/

#include <stdio.h>

float calculateAverage(float grade1, float grade2, float grade3, char type);

void main()
{
    float grade1, grade2, grade3;
    char type;

    scanf("%f %f %f %c", &grade1, &grade2, &grade3, &type);
    printf("%.2f\n", calculateAverage(grade1, grade2, grade3, type));
}

float calculateAverage(float grade1, float grade2, float grade3, char type)
{
    if (type == 'A')
    {
        return (grade1 + grade2 + grade3) / 3.0;
    }
    else if (type == 'P')
    {
        return (grade1 * 5.0 + grade2 * 3.0 + grade3 * 2.0) / 10.0;
    }
    else
    {
        return 0.0;
    }
}

-----------------------------------------------------------------------------------------------

//12

/*
 Escreva uma função que receba um número inteiro maior do que zero e retorne a soma de 
todos os seus algarismos. Por exemplo, ao número 251 corresponderá o valor 8 (2 + 5 + 1). 
Se  o  número  lido  não  for  maior  do  que  zero,  o  programa  terminará  com  a  mensagem 
“Número inválido”.
*/

#include <stdio.h>

int sumDigits(int number);

void main()
{
    int number;

    scanf("%d", &number);
    if (number > 0)
        printf("%d\n", sumDigits(number));
    else
        printf("Número inválido\n");
}

int sumDigits(int number)
{
    int sum = 0;

    while (number > 0)
    {
        sum += number % 10;
        number /= 10;
    }

    return sum;
}

----------------------------------------------------------------------------------------------

//13

/*
Faça uma função que receba dois valores numéricos e um símbolo. Este símbolo 
representará a operação que se deseja efetuar com os números. Se o símbolo for ‘+’ deverá 
ser realizada uma adição, se for ‘–‘ uma subtração, se for ‘*’ uma multiplicação e se for ‘/’ 
será efetuada uma divisão
*/

#include <stdio.h>

float calculate(float a, float b, char symbol);

void main()
{
    float a, b;
    char symbol;

    scanf("%f %f %c", &a, &b, &symbol);
    printf("%.2f\n", calculate(a, b, symbol));
}

float calculate(float a, float b, char symbol)
{
    if (symbol == '+')
        return a + b

    else if (symbol == '-')
        return a - b;
    
    else if (symbol == '*')
        return a * b;
  
    else if (symbol == '/')
        return a / b;
    
    else
    
        return 3;
    }
}

------------------------------------------------------------------------------------------------------------------------

//14

/*
Faça  uma  função  que  receba  a  distância  em  Km  e  a  quantidade  de  litros  de  gasolina 
consumidos  por  um  carro  em  um  percurso,  calcule  o  consumo  em  Km/l  e  escreva  uma 
mensagem de acordo com a tabela abaixo:  
CONSUMO     | (Km/l) | MENSAGEM 
menor que   | 8      | Venda o carro! 
entre       | 8 e 14 | Econômico! 
maior que   | 14     | Super econômico! 
*/

#include <stdio.h>

void calculateConsumption(float distance, float liters);

void main()
{
    float distance, liters;

    scanf("%f %f", &distance, &liters);
    calculateConsumption(distance, liters);
}

void calculateConsumption(float distance, float liters)
{
    float consumption = distance / liters;

    if (consumption < 8)
    {
        printf("Venda o carro!\n");
    }
    else if (consumption >= 8 && consumption <= 14)
    {
        printf("Econômico!\n");
    }
    else
    {
        printf("Super econômico!\n");
    }
}

----------------------------------------------------------------------------------------------

//15

/*
Crie um programa que receba três valores (obrigatoriamente maiores que zero), 
representando as medidas dos três lados de um triângulo. Elabore funções para:  
a) Determinar se eles lados formam um triângulo, sabendo que: 
- O comprimento de cada lado de um triângulo é menor do que a soma dos outros 
dois lados. 
b) Determinar e mostrar o tipo de triângulo, caso as medidas formem um triângulo. Sendo 
que: 
- Chama-se equilátero o triângulo que tem três lados iguais; 
- Denominam-se isósceles o triângulo que tem o comprimento de dois lados iguais; 
- Recebe o nome de escaleno o triângulo que tem os três lados diferentes.
*/

#include <stdio.h>

int isTriangle(float a, float b, float c);
void triangleType(float a, float b, float c);

void main()
{
    float a, b, c;

    scanf("%f %f %f", &a, &b, &c);
    if (isTriangle(a, b, c)) triangleType(a, b, c);
    else printf("Nao e um triangulo\n");
}

int isTriangle(float a, float b, float c)
{
    if (a < b + c && b < a + c && c < a + b) return 1;
    else return 0;
}

void triangleType(float a, float b, float c)
{
    if (a == b && b == c) printf("Equilatero\n");
    else if (a == b || b == c || a == c) printf("Isosceles\n");
    else printf("Escaleno\n");
}

-----------------------------------------------------------------------------------------------

//16

/*
Faça uma função chamada desenha_linha. Ele deve desenhar uma linha na tela usando uma 
sequência  de  símbolos  de  igual  (Ex.:  ========).  A  função  recebe  por  parâmetro  quantos 
sinais de igual serão mostrados.
*/

#include <stdio.h>

void drawLine(int number);

void main()
{
    int number;

    scanf("%d", &number);
    drawLine(number);
}

void drawLine(int number)
{
    int i;

    for (i = 0; i < number; i++)
        printf("=");
    printf("\n");
}

--------------------------------------------------------------------------------------------

//17

/*
Faça  uma  função  que  receba  dois  números  inteiros  positivos  por  parâmetro  e  retorne  a 
soma dos N números inteiros existentes entre eles.
*/

#include <stdio.h>

int sumBetween(int a, int b);

void main()
{
    int a, b;

    scanf("%d %d", &a, &b);
    printf("%d\n", sumBetween(a, b));
}

int sumBetween(int a, int b)
{
    int sum = 0;

    if (a > b) {
        int aux = a;
        a = b;
        b = aux;
    }

    for (int i = a + 1; i < b; i++)
        sum += i;

    return sum;
}

---------------------------------------------------------------------------------------------------

//18

/*
Faça uma função que receba por parâmetro dois valores inteiros x e z. Calcule e retorne o 
resultado de xz para o programa principal. Atenção não utilize nenhuma função pronta de 
exponenciação.
*/

#include <stdio.h>

int power(int x, int z);

void main()
{
    int x, z;

    scanf("%d %d", &x, &z);
    printf("%d\n", power(x, z));
}

int power(int x, int z)
{
    int result = 1;

    for (int i = 0; i < z; i++)
        result *= x;

    return result;
}

---------------------------------------------------------------------------------------------

//19

/*
Faça uma função que receba um número inteiro positivo n e calcule o seu fatorial, n!. 
*/

#include <stdio.h>

int factorial(int n);

void main()
{
    int n;

    scanf("%d", &n);
    printf("%d\n", factorial(n));
}

int factorial(int n)
{
    int i, result = 1;

    for (i = 1; i <= n; i++)
        result *= i;

    return result;
}

------------------------------------------------------------------------------------------------

//20

/*
Crie uma função que receba como parâmetro um valor inteiro e gere como saída n linhas 
com pontos de exclamação, conforme o exemplo abaixo (para n = 5): 
 
! 
!! 
!!! 
!!!! 
!!!!! 
*/

#include <stdio.h>

void printExclamation(int n);

void main()
{
    int n;

    scanf("%d", &n);
    printExclamation(n);
}

void printExclamation(int n)
{
    int i, j;

    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= i; j++)
            printf("!");
        printf("\n");
    }
}

---------------------------------------------------------------------------------------------

//23

/*
Escreva uma função que gera um triângulo lateral de altura 2*n-1 e n largura. Por exemplo, 
a saída para n = 4 seria: 
 
* 
** 
*** 
**** 
*** 
** 
*
*/

#include <stdio.h>

void printTriangle(int n);

void main()
{
    int n;

    scanf("%d", &n);
    printTriangle(n);
}

void printTriangle(int n)
{
    int i, j;

    for (i = 1; i <= 2 * n - 1; i++)
    {
        if (i <= n)
        {
            for (j = 1; j <= i; j++)
                printf("*");
        }
        else
        {
            for (j = 1; j <= 2 * n - i; j++)
                printf("*");
        }
        printf("\n");
    }
}

------------------------------------------------------------------------------------------------

//24

/*
Escreva uma função que gera um triângulo de altura e lados n e base 2*n-1. Por exemplo, a 
saída para n = 6 seria: 
 
     * 
    *** 
   ***** 
  ******* 
 ********* 
***********
*/

#include <stdio.h>

void printTriangle(int n);

void main()
{
    int n;

    scanf("%d", &n);
    printTriangle(n);
}

void printTriangle(int n)
{
    int i, j;

    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= n - i; j++)
            printf(" ");
        for (j = 1; j <= 2 * i - 1; j++)
            printf("*");
        printf("\n");
    }
}


=================================================== 
                  string
 =================================================== 
  
 //1 
  
 /*faça um programa que leia e a imprima*/ 
 #include <stdio.h> 
  
  
 char string[200]; 
  
  
 int main() 
 { 
     printf("qual a string? "); 
     fgets(string,200,stdin); 
      
     printf("%s", string); 
  
     return 0; 
 } 
  
 ----------------------------------------------------- 
  
 //2 
  
 #include <stdio.h> 
 char *string="0011001"; 
 char num1=0; 
 int main() 
 { 
     printf("Uns="); 
     while (*string)  
       { 
        if (*string=='1') ++num1; 
        *string++;     
       } 
  
     printf("%d",num1); 
     return 0; 
 } 
  
 ----------------------------------------------------- 
  
 //3 
  
 #include <stdio.h> 
 #include <string.h> 
  
 int main() 
 { 
 char strings[200]; 
 int i, tamanho;  
  
 printf("Digite uma string: ");  
 fgets(strings,200,stdin); 
 tamanho = strlen(strings);  
 printf("A string invertida : \n");  
   for(i=tamanho; i>=0; i--)  
      { 
        printf("%c" ,strings[i]); 
      }  
 return 0; 
 } 
  
 ----------------------------------------------------- 
  
 //4 
  
 #include <stdio.h> 
  
 void main() 
 { 
   char str[100], c; 
   int i, count = 0; 
  
   fgets(str, 100, stdin); 
   scanf("%c", &c); 
   for (i = 0; str[i] != '\0'; i++) 
   { 
     if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u') 
     { 
       str[i] = c; 
       count++; 
     } 
   } 
   printf("A string tem %d vogais\n", count); 
   printf("%s", str); 
 } 
  
 ----------------------------------------------------- 
  
 //5 
  
 #include <stdio.h> 
  
 void conv(char texto[11]) { 
     for (int i = 0; texto[i] != '\0'; i++) texto[i] += 32; 
     printf("A palavra em maiusculas %s", texto); 
 } 
  
 int main() 
 { 
     char palavra[11]; 
     printf("Digite uma palavra: "); 
     scanf("%s10", palavra); 
     conv(palavra); 
 } 
  
  
 ----------------------------------------------------- 
  
 //6 
  
 #include <stdio.h> 
  
 void convmaiuscula(char texto[11]) { 
     for (int i = 0; texto[i] != '\0'; i++) texto[i] -= 32; 
     printf("A palavra em maiusculas %s", texto); 
 } 
  
 int main() { 
     char palavra[11]; 
     printf("Digite uma palavra: "); 
     scanf("%s10", palavra); 
     convmaiuscula(palavra); 
 } 
  
  
 ----------------------------------------------------- 
  
 //7 
  
 #include <stdio.h> 
 #include <ctype.h> 
  
 char * remove_espacos( char * out, const char * in ) 
 { 
     const char * p = in; 
     int i = 0; 
  
     while( *p ) 
     { 
         if( !isspace(*p) ) 
             out[i++] = *p; 
  
         p++; 
     } 
  
     out[i] = 0; 
  
     return out; 
 } 
  
  
 int main() 
 { 
     char entrada [200]; 
     char saida [ 100 ] = {0}; 
      
     printf("qual o vetor? "); 
     fgets(entrada,200,stdin); 
  
     remove_espacos( saida, entrada ); 
  
     printf("Entrada: %s\n", entrada ); 
     printf("Saida: %s\n", saida ); 
  
     return 0; 
 } 
  
  
 ----------------------------------------------------- 
  
 //8 
  
 #include <stdio.h> 
  
 int main() 
 { 
   char str[100], l1, l2; 
   int i; 
  
   fgets(str, 100, stdin); 
   scanf("%c %c", &l1, &l2); 
   for (i = 0; str[i] != '\0'; i++) 
   { 
     if (str[i] == l1) 
     { 
       str[i] = l2; 
     } 
   } 
   printf("%s", str); 
 } 
  
  
 ----------------------------------------------------- 
  
 //9 
  
 #include <stdio.h> 
 #include <string.h> 
  
 int main() 
 { 
   char str[5][100]; 
   float cons[5], maior = 0; 
   int i, j, pos; 
  
   for (i = 0; i < 5; i++) 
   { 
     printf("Digite o modelo do carro %d:\n", i + 1); 
     fgets(str[i], 100, stdin); 
     str[i][strlen(str[i]) - 1] = '\0'; 
  
     printf("Digite o consumo do carro %d:\n", i + 1); 
     scanf("%f", &cons[i]);     
     printf("\n"); 
     getchar(); 
   } 
  
   for (i = 0; i < 5; i++) 
   { 
     if (cons[i] > maior) 
     { 
       maior = cons[i]; 
       pos = i; 
     } 
   } 
   printf("O carro mais economico eh o %s\n", str[pos]); 
  
   for (i = 0; i < 5; i++) 
   { 
     printf("O carro %s consome %.2f litros para percorrer 1000km\n", str[i], 1000 / cons[i]); 
   } 
 } 
  
  
  
 ----------------------------------------------------- 
  
 //10 
  
 #include <stdio.h> 
  
 int main() 
 { 
   char nome[100]; 
   float valor, desconto, valor_a_vista; 
  
   fgets(nome, 100, stdin); 
   scanf("%f", &valor); 
   desconto = valor * 0.1; 
   valor_a_vista = valor - desconto; 
   printf("\nNome: %s\n", nome); 
   printf("Valor total: %.2f\n", valor); 
   printf("Desconto: %.2f\n", desconto); 
   printf("Valor a vista: %.2f\n", valor_a_vista); 
 } 
  
 ----------------------------------------------------- 
 //11 
  
 #include <stdio.h> 
  
 int main() 
 { 
   char str[100]; 
   int i, j; 
  
   fgets(str, 100, stdin); 
   scanf("%d %d", &i, &j); 
   for (; i <= j; i++) 
   { 
     printf("%c", str[i]); 
   } 
   printf("\n"); 
 } 
  
 ----------------------------------------------------- 
  
 //12 
  
 #include <stdio.h> 
  
 int main() 
 { 
   char str[100]; 
   int i; 
  
   fgets(str, 100, stdin); 
   for (i = 0; str[i] != '\0'; i++) 
   { 
     if (str[i] >= 'A' && str[i] <= 'Z') 
     { 
       str[i] = (str[i] - 'A' + 3) % 26 + 'A'; 
     } 
     else if (str[i] >= 'a' && str[i] <= 'z') 
     { 
       str[i] = (str[i] - 'a' + 3) % 26 + 'a'; 
     } 
   } 
   printf("%s", str); 
 } 
  
 ----------------------------------------------------- 
 //13 
  
 #include <stdio.h> 
  
 int main() 
 { 
   char str1[100], str2[100]; 
   int i, j, n; 
  
   fgets(str1, 100, stdin); 
   fgets(str2, 100, stdin); 
   scanf("%d", &n); 
   for (i = 0; str1[i] != '\0'; i++) 
   { 
   } 
   for (j = 0; j < n; j++) 
   { 
     str1[i + j] = str2[j]; 
   } 
   str1[i + j] = '\0'; 
   printf("%s", str1); 
 } 
  
 ----------------------------------------------------- 
 //14 
  
 #include <stdio.h> 
  
 int main() 
 { 
   char str1[100], str2[100]; 
   int i, j, n; 
  
   fgets(str1, 100, stdin); 
   fgets(str2, 100, stdin); 
   scanf("%d", &n); 
   for (i = 0; str1[i] != '\0'; i++) 
   { 
   } 
   for (j = 0; j < n; j++) 
   { 
     str1[i + j] = str2[j]; 
   } 
   str1[i + j] = '\0'; 
   printf("%s", str1); 
 } 
 ----------------------------------------------------- 
  
 //15 
  
 #include <stdio.h> 
 #include <string.h> 
  
 int main() 
 { 
   char str1[20], str2[20], c1, c2, op, substring[20]; 
   int i, count = 0, pos, tam; 
  
   do 
   {     
     printf("\n(a) Ler uma string S1 (tamanho máximo 20 caracteres);\n"); 
  
     printf("(b) Imprimir o tamanho da string S1;\n"); 
  
     printf("(c) Comparar a string S1 com uma nova string S2 fornecida pelo usuário e imprimir o resultado da comparação;\n"); 
  
     printf("(d) Concatenar a string S1 com uma nova string S2 e imprimir na tela o resultado da concatenação;\n"); 
  
     printf("(e) Imprimir a string S1 de forma reversa;\n"); 
  
     printf("(f) Contar quantas vezes um dado caractere aparece na string S1. Esse caractere desse ser informado pelo usuário;\n"); 
  
     printf("(g) Substituir a primeira ocorrência do caractere C1 da string S1 pelo caractere C2. Os caracteres C1 e C2 serão lidos pelo usuário;\n"); 
  
     printf("(h) Verificar se uma string S2 é substring de S1. A string S2 deve ser informada pelo usuário;\n"); 
  
     printf("(i) Retornar uma substring da string S1. Para isso o usuário deve informar a partir de qual posição deve ser criada a substring e qual é o tamanho da substring.\n"); 
  
     printf("Digite a opção: \n"); 
     scanf("%c", &op); 
     getchar(); 
  
     switch (op) 
     { 
     case 'a': 
       printf("\nDigite a string S1:\n"); 
       fgets(str1, 20, stdin); 
       str1[strlen(str1) - 1] = '\0'; 
       break; 
     case 'b': 
       printf("O tamanho da string S1 é %d\n", strlen(str1)); 
       break; 
     case 'c': 
       printf("\nDigite a string S2: "); 
       fgets(str2, 20, stdin); 
       printf(strcmp(str1, str2) ? "As strings sao diferentes\n" : "As strings sao iguais\n"); 
       break; 
     case 'd': 
       printf("\nDigite a string S2: "); 
       fgets(str2, 20, stdin); 
       printf("O resultado da concatenação é \"%s\"\n", strcat(str1, str2)); 
       break; 
     case 'e': 
       for (i = strlen(str1) - 1; i >= 0; i--) 
       { 
         printf("%c", str1[i]); 
       } 
       printf("\n"); 
       break; 
     case 'f': 
       printf("\nDigite o caractere: "); 
       scanf(" %c", &c1); 
       for (i = 0; str1[i] != '\0'; i++) 
       { 
         if (str1[i] == c1) 
         { 
           count++; 
         } 
       } 
       printf("\nO caractere %c aparece %d vezes na string S1\n", c1, count); 
       break; 
     case 'g': 
       printf("\nDigite o caractere C1: "); 
       scanf(" %c", &c1); 
       printf("\nDigite o caractere C2: "); 
       scanf(" %c", &c2); 
       for (i = 0; str1[i] != '\0'; i++) 
       { 
         if (str1[i] == c1) 
         { 
           str1[i] = c2; 
           break; 
         } 
       } 
       printf("A string S1 agora é %s\n", str1); 
       break; 
     case 'h': 
       printf("\nDigite a string S2: "); 
       fgets(str2, 20, stdin); 
       if (strstr(str1, str2) != NULL) 
       { 
         printf("A string S2 é substring de S1\n"); 
       } 
       else 
       { 
         printf("A string S2 não é substring de S1\n"); 
       } 
       break; 
     case 'i': 
       printf("\nDigite a posição: "); 
       scanf("%d", &pos); 
       printf("\nDigite o tamanho: "); 
       scanf("%d", &tam); 
        
       for (i = pos; i <= tam; i++) 
       { 
         substring[i] = str1[pos + i]; 
       } 
       substring[i + 1] = '\0'; 
  
       printf("A substring é %s\n", substring); 
       break; 
     } 
   } while (op >= 'a' || op <= 'i'); 
 } 
  
 ---------------------------------------------------------- 
  
 //16 
  
  
 nn fiz :)